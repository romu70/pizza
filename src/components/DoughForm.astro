---
import { getLangFromUrl, useTranslations } from '../i18n/utils';
import InputNum from "../components/InputNum.astro";
import Button from "../components/Button.astro";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
// console.log(lang);

let DefaultDoughWeight: number = 250;
let DefaultDoughWeightStep: number = 10;
let DefaultMaxDoughWeight: number = 600;
const MetricToImperial: number = 0.03527396195;

if(lang === "en-US") {
  DefaultDoughWeight *= MetricToImperial;
  DefaultDoughWeightStep *= MetricToImperial;
  DefaultMaxDoughWeight *= MetricToImperial;
}
---
<div class="form">
  <p id="message" class="caption">{t('home.message')}</p>
  <form id="pizza">
    <!-- <h2>Saisie des paramètres</h2> -->
    <InputNum
      label={t('form.dough-weight')}
      id="weight"
      min={DefaultDoughWeight.toFixed(1)}
      max={DefaultMaxDoughWeight.toFixed(1)}
      step={DefaultDoughWeightStep.toFixed(1)}
    />
    <InputNum
      label={t('form.number')}
      id="quantity"
      min="1"
      max="20"
      step="1"
    />
    <InputNum
      label={t('form.water')}
      id="water"
      min="50"
      max="80"
      step="0.5"
    />
    <InputNum
      label={t('form.oil')}
      id="oil"
      min="0"
      max="5"
      step="0.5"
    />
    <InputNum
      label={t('form.salt')}
      id="salt"
      min="0"
      max="5"
      step="0.5"
      type="range"
    />
    <fieldset id="yeast-type" data-id="yeast-type">
      <label>{t('form.yeast-type')}</label>
      <div class="radio">
        <input
          type="radio"
          id="yeast-fresh"
          name="yeast-type"
          value="fresh"
          checked
        />
        <label for="yeast-fresh">{t('form.yeast-type.fresh')}</label>
      </div>
      <div class="radio">
        <input type="radio" id="yeast-dry" name="yeast-type" value="dry" />
        <label for="yeast-dry">{t('form.yeast-type.dry')}</label>
      </div>
    </fieldset>
    <InputNum
      label={t('form.yeast-rate')}
      id="yeast"
      min="0"
      max="5"
      step="0.1"
    />
    <p id="yeast-caption" class="caption">
      équivalence levure
    </p>
    <Button id="compute" type="submit" value="compute" label={t('form.button.text')} />
  </form>
</div>

<style>
  #message {
    width: 80%;
    margin: auto;
  }

  .form {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    align-items: center;
    margin-top: 2rem;
  }

  form {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    /* padding: 1rem; */
    align-items: center;
    width: 90%;
    max-width: 28rem;
  }

  .type {
    color: var(--main-color);
    font-weight: 300;
  }

  .value {
    font-weight: 600;
    color: #666;
  }

  .left {
    display: flex;
    gap: 1rem;
  }

  .left img {
    width: 2rem;
    height: 2rem;
  }

  .ingredient {
    display: flex;
    flex-direction: row;
    width: 100%;
    justify-content: space-between;
    border-bottom: 1px solid #ddd;
    padding: 0.5rem 0;
  }

  @media (min-width: 512px) {
    form {
      padding: 2rem;
    }
  }



h2 {
  text-align: center;
  color: #999;
}

fieldset {
  border: none;
  width: 100%;
}

fieldset > label {
  color: var(--main-color);
  font-weight: 500;
  font-size: 1.2rem;
}

.radio {
  padding: 0.25rem 0;
  display: flex;
  gap: 0.5rem;
  align-items: center;
}

.radio label {
  color: black;
}

input[type="radio"] {
  width: 1.5rem;
  height: 1.5rem;
}

#yeast-caption {
  /* visibility: hidden; */
  margin-top: -0.5rem;
}

fieldset {
  border: none;
  width: 100%;
}

fieldset > label {
  color: var(--main-color);
  font-weight: 500;
}

.radio {
  padding: 0.25rem 0;
  display: flex;
  gap: 0.5rem;
  align-items: center;
}

.radio label {
  color: black;
}

input[type="radio"] {
  width: 1.5rem;
  height: 1.5rem;
}

#yeast-caption {
  /* visibility: hidden; */
  margin-top: -0.5rem;
}
</style>
